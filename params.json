{"name":"SPLlift","tagline":"Highly efficient inter-procedural data-flow analysis for software product lines","body":"SPLlift\r\n=====================\r\nSPLlift is an approach that lets you automatically reuse inter-procedural static data-flow analyses implemented in the IFDS framework also for entire Software Product Lines (SPLs). If, for normal programs, the analysis reports that a piece of analysis information may or may not hold at a given statement, the SPL-version reports a Boolean constraint telling you under which feature combinations this fact could hold at that statement. This all can be done without having to change a single line of code on the side of the client analysis.\r\n\r\nWho are the developers of SPLlift?\r\n----------------------------------\r\nSPLlift is a joint development of Eric Bodden Claus Brabrand, Tarsis Toledo, Marcio Ribeiro, Paulo Borba and Mira Mezini. It is currently maintained by [Eric Bodden][5].\r\nSPLlift\r\n=====================\r\nSPLlift is an approach that lets you automatically reuse inter-procedural static data-flow analyses implemented in the IFDS framework also for entire Software Product Lines (SPLs). If, for normal programs, the analysis reports that a piece of analysis information may or may not hold at a given statement, the SPL-version reports a Boolean constraint telling you under which feature combinations this fact could hold at that statement. This all can be done without having to change a single line of code on the side of the client analysis.\r\n\r\nFor example, assume a taint analysis that reports cases in which the return value of `password()` flows into `print(..)`. For the following product line, SPLlift would report that such a case can occur if and only if `F` and `H` are disabled and `G` is enabled:\r\n\r\n![Screenshot of CIDE](website/screenshot.png \"Screenshot of CIDE\")\r\n\r\nWho are the developers of SPLlift?\r\n----------------------------------\r\nSPLlift is a joint development of Eric Bodden Claus Brabrand, Tarsis Toledo, Marcio Ribeiro, Paulo Borba and Mira Mezini. It is currently maintained by [Eric Bodden][5].\r\n\r\nWhy is SPLlift called SPLlift?\r\n------------------------------\r\nIt is called SPLlift because it allows existing analyses that are designed for \"normal Java programs\" to be lifted to analyses that operate on entire software product lines.\r\n\r\nAre there any publications on SPLlift?\r\n--------------------------------------\r\nYes, there are:\r\n\r\n[Transparent and Efficient Reuse of IFDS-based Static Program Analyses for Software Product Lines][4] (Eric Bodden, Társis Tolêdo, Márcio Ribeiro, Claus Brabrand, Paulo Borba, Mira Mezini), Technical report TUD-CS-2012-0239, EC SPRIDE, Technische Universität Darmstadt, 2012.\r\n\r\nWhat is IFDS/IDE?\r\n-----------------\r\n[IFDS][1] is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by [Heros][3].\r\n[IDE][2] is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE. SPLlift replaces this \"adapter\" by a more expressive one that automatically tracks feature constraints as shown in this figure:\r\n\r\n![SPLLift schema](website/spllift-schema.png \"SPLLift schema\")\r\n\r\nHow can I contribute to SPLlift?\r\n--------------------------------\r\nContributions are more than welcome! It is easiest to fork the project on Github. Then make your modifications on the fork and send us a pull request. This will allow us easy re-integration.\r\n\r\n[1]: http://dx.doi.org/10.1145/199448.199462\r\n[2]: http://dx.doi.org/10.1016/0304-3975(96)00072-2\r\n[3]: https://github.com/Sable/heros/\r\n[4]: http://www.bodden.de/pubs/btr+12transparent.pdf\r\n[5]: http://www.bodden.de/\r\nWhy is SPLlift called SPLlift?\r\n------------------------------\r\nIt is called SPLlift because it allows existing analyses that are designed for \"normal Java programs\" to be lifted to analyses that operate on entire software product lines.\r\n\r\nAre there any publications on SPLlift?\r\n--------------------------------------\r\nYes, there are:\r\n\r\n[Transparent and Efficient Reuse of IFDS-based Static Program Analyses for Software Product Lines][4] (Eric Bodden, Társis Tolêdo, Márcio Ribeiro, Claus Brabrand, Paulo Borba, Mira Mezini), Technical report TUD-CS-2012-0239, EC SPRIDE, Technische Universität Darmstadt, 2012.\r\n\r\nWhat is IFDS/IDE?\r\n-----------------\r\n[IFDS][1] is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by [Heros][3].\r\n[IDE][2] is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE. SPLlift replaces this \"adapter\" by a more expressive one that automatically tracks feature constraints.\r\n\r\nWhich dependencies does SPLlift have?\r\n-------------------------------------\r\nSPLlift is based on [Heros][3], [Soot][6], [CIDE][7] and [JavaBDD][8]. Thanks to the developers of those tools for making them available!\r\n\r\nHow can I contribute to SPLlift?\r\n--------------------------------\r\nContributions are more than welcome! It is easiest to fork the project on Github. Then make your modifications on the fork and send us a pull request. This will allow us easy re-integration.\r\n\r\n[1]: http://dx.doi.org/10.1145/199448.199462\r\n[2]: http://dx.doi.org/10.1016/0304-3975(96)00072-2\r\n[3]: https://github.com/Sable/heros/\r\n[4]: http://www.bodden.de/pubs/btr+12transparent.pdf\r\n[5]: http://www.bodden.de/\r\n[6]: https://github.com/Sable/soot\r\n[7]: http://wwwiti.cs.uni-magdeburg.de/iti_db/research/cide/\r\n[8]: http://javabdd.sourceforge.net/\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}